Sunday 2022-10-09 23h55 utc+1
by @PaulskPt
Platform: Unexpected Maker PROS3
Project: sercom_I2C
Version: 2
Script for device with role Main
IDE: mu-editor v 1.1.1

Note: this is the first time the script is doing what it is meant to do:
 1) send a request for datetime to the device with role Sensor
 2) call ck_uart() to handle the acknowledge from the device with role Sensor
 3) ... idem ...   handle the received datetime
 4) set the built-in RTC with the received datetime
 5) call make_clock() to prepare the PyPortal Titano flipclock display
 6) set the flipclock four digits: two digits (hours) for the 'first pair' and two digits (minutes) for the 'second pair'
 7) at a minute interval update the flipclock
 8) if necessary (at certain interval time) set the built-in RTC to the fresh NTP datetime;
 9) do some datetime conversion if necessary;
10) continue to loop inside main().


NOTE: the example below sends a UNIX epoch value to the device with the role Main:
(as if Main requested with request_code= 101)

REPL output:


soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
====================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
====================================
make_clock():       mem_free= 84656
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          nr of bytes received= 2
ck_uart():          type(rx_buffer)=<class 'bytes'>
ck_uart():          rcvd data= b' \x06'
ck_uart():          ACK code received from Sensor
ck_uart():          waiting for reception of the message...
ck_uart():          nr of bytes received= 22
ck_uart():          type(rx_buffer)=<class 'bytes'>
ck_uart():          rcvd data= b' \x13\x022022-10-09 23:55:05'
ck_uart():          STX code received from Sensor
ck_uart():          the received message is addressed to device with role: 'Main'
ck_uart():          received address: 0x20
ck_uart():          received value for msg length= 19
ck_uart():          date_time received from Sensor = '2022-10-09 23:55:05'
main():             mem_free= 81120
main():             default_s_dt= 2022-10-09 23:55:05
dtstr_to_stru():    default_dt= None
dtstr_to_stru():    default_s_dt= 2022-10-09 23:55:05
main():             Built-in RTC is synchronized from NTP pool
upd_tm():           Time = 23:55