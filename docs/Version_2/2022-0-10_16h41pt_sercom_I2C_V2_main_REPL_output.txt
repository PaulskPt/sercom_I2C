Monday 2022-10-10 16h41 utc+1
by @PaulskPt
Platform: Adafruit PyPortal Titano
Project: Adafruit_DisplayIO_FlipClock with sercom_I2C
Version: 2
Script for device with role Main
IDE: mu-editor v 1.1.1

Note: The script is doing what it is meant to do:
 1) send a request for datetime to the device with role Sensor
 2) call ck_uart() to handle the acknowledge from the device with role Sensor
 3) ... idem ...   handle the received datetime
 4) set the built-in RTC with the received datetime
 5) call make_clock() to prepare the PyPortal Titano flipclock display
 6) set the flipclock four digits: two digits (hours) for the 'first pair' and two digits (minutes) for the 'second pair'
 7) at a minute interval update the flipclock
 8) if necessary (at certain interval time) set the built-in RTC to the fresh NTP datetime;
 9) do some datetime conversion if necessary;
10) continue to loop inside main().

Latest changes: added Version number and printed that in main()


REPL output:

soft reboot

code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          received value for msg length= 19
ck_uart():          message is valid
main():             mem_free= 83696
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:19
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          received value for msg length= 19
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83696
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:20
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 3075.39, u_end= 3075.22
main():             mem_free= 83520
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:20
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83472
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:21
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83472
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:22
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83472
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:22
main():             Time elapsed: 10
main():             Time elapsed: 20
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83296
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:23
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:23
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:24
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:24
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:25
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:25
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 3382.92, u_end= 3382.72
main():             mem_free= 83120
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:25
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:26
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 3443.34, u_end= 3443.17
main():             mem_free= 83120
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:26
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:27
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:28
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 83072
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:28
main():             Time elapsed: 10
main():             Time elapsed: 20
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\Traceback (most recent call last):
  File "code.py", line 203
IndentationError: unexpected indent
]0;üêç203@code.py IndentationError | 8.0.0-beta.1\
Code done running.

Press any key to enter the REPL. Use CTRL-D to reload.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84576
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:29
main():             Time elapsed: 10
main():             Time elapsed: 20
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:30
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:30
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is not valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:31
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:31
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:32
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 3783.59, u_end= 3783.42
main():             mem_free= 84464
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:32
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:33
main():             Time elapsed: 10
main():             Time elapsed: 20
Keyboard interrupt. Exiting...
]0;üêçDone | 8.0.0-beta.1\
Code done running.

Press any key to enter the REPL. Use CTRL-D to reload.
]0;üêçREPL | 8.0.0-beta.1\
Adafruit CircuitPython 8.0.0-beta.1 on 2022-10-01; Adafruit PyPortal Titano with samd51j20
>>> 
]0;üêçDone | 8.0.0-beta.1\soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:38
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is not valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:39
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:39
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
version 2.0
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:40
main():             Time elapsed: 10
main():             Time elapsed: 20
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Version 2.0
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:40
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:41
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:41
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:42
main():             Time elapsed: 10
main():             Time elapsed: 20
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Version 2.0
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
upd_tm():           datetime  invalid.
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:43
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:43
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:44
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 4501.96, u_end= 4501.91
main():             mem_free= 84464
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:44
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:45
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:45
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:46
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:46
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:47
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84416
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:47
main():             Time elapsed: 10
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Version 2.0
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 84640
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:47
main():             Time elapsed: 10
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          timed-out. u_now= 4740.67, u_end= 4740.5
main():             mem_free= 84464   <<<======================== Memory available without bitmapped spritesheets loaded
                                                                  and without module cedargrove_palettefader.py 
																  (which is loaded by Adafruit_DisplayIO_FlipClock >
																  adafruit_displayio_flipclock > FlipDigit > __init__()
																  In this script using palettefader is determined by the 
																  value of the global variable 'use_dynamic_fading'.
																  Here, in this moment the value of 'use_dynamic_fading'
																  was 'False'
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:47
]0;üêçDone | 8.0.0-beta.1\
Code stopped by auto-reload. Reloading soon.
soft reboot

Auto-reload is on. Simply save files over USB to run them or enter REPL to disable.
code.py output:
]0;üêçcode.py | 8.0.0-beta.1\
===========================================
DISPLAYIO.FLIPCLOCK
USING SERCOM VIA I2C TEST FOR TIME UPDATES
Version 2.0
Running on an PYPORTAL_TITANO
in the role of Main
===========================================
main():             Time elapsed: 10
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 18208
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:49
main():             Time elapsed: 20
main():             Time elapsed: 30
main():             going to send request for date_time to device with role: Sensor
send_req():         request for date_time sent
ck_uart():          message is valid
main():             mem_free= 17984     <<<===================== Memory available with various bitmapped spritesheets loaded
                                                    			  Here, in this moment the value of 'use_dynamic_fading'
																  was 'True'
main():             built-in RTC is synchronized from NTP pool
main():             new time from built-in RTC=16:49
main():             Time elapsed: 10
